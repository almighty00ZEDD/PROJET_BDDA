package miniSGBD;
import java.util.Vector;
import java.io.Serializable;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;


public final class DBInfo implements Serializable{
		/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

		//unique instance
		private static DBInfo INSTANCE;
		private static final String path = DBParams.DBPath;
		private static final File  f = new File(path + "/catalog.def");
		private static Vector<RelationInfo> liste_RelationInfo;
		private static int compteur_relations;
		
		//Constructeur
		private  DBInfo(){
			
		}
		
		//accès à l'instance unique du DBManager
		public static DBInfo getInstance() {
			if(INSTANCE == null) {
				INSTANCE = new DBInfo();
			}
			
			return INSTANCE;
		}
		
		//Initialisation
		public void Init() {
			
			liste_RelationInfo = new Vector<RelationInfo>(10);
			setCompteur_relations(0);
		}
		
		//Fin de tache
		public void Finish() {
		
		}
		
		public void AddRelation(RelationInfo ri) {
			if(liste_RelationInfo.contains(ri)) return;
				liste_RelationInfo.add(ri);
				setCompteur_relations(getCompteur_relations() + 1);
			
		}
		
		//juste pour les tests
		public void debug() {
			RelationInfo ri = liste_RelationInfo.elementAt(0);
			ri.debug();
		}

		public static int getCompteur_relations() {
			return compteur_relations;
		}

		public static void setCompteur_relations(int compteur_relations) {
			DBInfo.compteur_relations = compteur_relations;
		}
}
